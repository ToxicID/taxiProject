<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        z/8DAFhan05RtesAAAAASUVORK5CYII=
</value>
  </data>
</root>